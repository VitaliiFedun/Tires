<?php

/**
 * lib/model/doctrine/TiresProductTable.class.php:2
 * TiresProductTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TiresProductTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TiresProductTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TiresProduct');
    }

    public function getForLuceneQuery($query)
    {
        $hits = self::getLuceneIndex()->find($query);

        $pks = array();
        foreach ($hits as $hit)
        {
            $pks[] = $hit->pk;
        }

        if (empty($pks))
        {
            return array();
        }

        $q = $this->createQuery('j')
            ->whereIn('j.uuid', $pks);
//            ->limit(20);

        $q = $this->addActiveProductsQuery($q);

        return $q->execute();
    }

    static public function getLuceneIndex()
    {
        ProjectConfiguration::registerZend();

        if (file_exists($index = self::getLuceneIndexFile()))
        {
            return Zend_Search_Lucene::open($index);
        }
        else
        {
            return Zend_Search_Lucene::create($index);
        }
    }

    static public function getLuceneIndexFile()
    {
        return sfConfig::get('sf_data_dir').'/tires.'.sfConfig::get('sf_environment').'.index';
    }

    public function retrieveActiveProduct(Doctrine_Query $q)
    {
        return $this->addActiveProductsQuery($q)->fetchOne();
    }

    public function getActiveProducts(Doctrine_Query $q = null)
    {
        return $this->addActiveProductsQuery($q)->execute();
    }

    public function countActiveProducts(Doctrine_Query $q = null)
    {
        return $this->addActiveProductsQuery($q)->count();
    }

    public function addActiveProductsQuery(Doctrine_Query $q = null)
    {
        if (is_null($q))
        {
            $q = Doctrine_Query::create()
                ->from('TiresProduct j');
        }

        $alias = $q->getRootAlias();
        $q->andWhere($alias . '.active = ?', 1);
        return $q;
    }

}
