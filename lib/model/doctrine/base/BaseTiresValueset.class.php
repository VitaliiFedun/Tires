<?php

/**
 * BaseTiresValueset
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $uuid
 * @property integer $products_uuid
 * @property integer $attributes_uuid
 * @property string $value
 * @property TiresAttribute $TiresAttribute
 * @property TiresProduct $TiresProduct
 * 
 * @method integer        getuuid()            Returns the current record's "uuid" value
 * @method integer        getproducts_uuid()   Returns the current record's "products_uuid" value
 * @method integer        getattributes_uuid() Returns the current record's "attributes_uuid" value
 * @method string         getvalue()           Returns the current record's "value" value
 * @method TiresAttribute getTiresAttribute()  Returns the current record's "TiresAttribute" value
 * @method TiresProduct   getTiresProduct()    Returns the current record's "TiresProduct" value
 * @method TiresValueset  setuuid()            Sets the current record's "uuid" value
 * @method TiresValueset  setproducts_uuid()   Sets the current record's "products_uuid" value
 * @method TiresValueset  setattributes_uuid() Sets the current record's "attributes_uuid" value
 * @method TiresValueset  setvalue()           Sets the current record's "value" value
 * @method TiresValueset  setTiresAttribute()  Sets the current record's "TiresAttribute" value
 * @method TiresValueset  setTiresProduct()    Sets the current record's "TiresProduct" value
 * 
 * @package    tires
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTiresValueset extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Tires_valueset');
        $this->hasColumn('uuid', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('products_uuid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('attributes_uuid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('value', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));


        $this->index('fk_products1_idx_idx_idx_idx', array(
             'fields' => 
             array(
              0 => 'products_uuid',
             ),
             ));
        $this->index('fk_attribut1_idx_idx_idx_idx', array(
             'fields' => 
             array(
              0 => 'attributes_uuid',
             ),
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TiresAttribute', array(
             'local' => 'attributes_uuid',
             'foreign' => 'uuid',
             'owningSide' => true));

        $this->hasOne('TiresProduct', array(
             'local' => 'products_uuid',
             'foreign' => 'uuid',
             'owningSide' => true));
    }
}